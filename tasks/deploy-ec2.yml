- name: Provision ClusterControl node
  ec2:
    count: "{{ itemx.cc_nodes | default(1) }}"
    region: "{{ itemx.region }}"
    zone: "{{ itemx.zone }}"
    key_name: "{{ itemx.key_name }}"
    group: "{{ itemx.group | default('default') }}"
    instance_type: "{{ itemx.instance_type | default ('t2.medium') }}"
    image: "{{ itemx.image }}"
    wait: "{{ itemx.wait | default('yes') }}"
    wait_timeout: "{{ itemx.wait_timeout | default(500) }}"
    volumes:
      - device_name: "{{ itemx.device_name | default('/dev/sda1') }}"
        device_type: "{{ itemx.device_type | default('standard') }}"
        volume_size: "{{ itemx.volume_size | default(20) }}"
        delete_on_termination: "{{ itemx.delete_on_termination | default(true) }}"
    monitoring: "{{ itemx.monitoring | default('no') }}"
    vpc_subnet_id: "{{ itemx.vpc_subnet_id }}"
    assign_public_ip: "{{ itemx.assign_public_ip | default('yes') }}"
    instance_tags:
      Name: "{{ itemx.cc_tags | default('clustercontrol') }}"
      set: ansible
      group: "{{ itemx.cc_tags | default('clustercontrol') }}"
  with_items:
    - "{{ ec2 }}"
  when: create_ec2
  tags: ec2
  loop_control:
    loop_var: itemx

- name: Provision Galera nodes
  ec2:
    count: "{{ itemy.db_nodes | default(3) }}"
    region: "{{ itemy.region }}"
    zone: "{{ itemy.zone }}"
    key_name: "{{ itemy.key_name }}"
    group: "{{ itemy.group | default('default') }}"
    instance_type: "{{ itemy.instance_type | default ('t2.medium') }}"
    image: "{{ itemy.image }}"
    wait: "{{ itemy.wait | default('yes') }}"
    wait_timeout: "{{ itemy.wait_timeout | default(500) }}"
    volumes:
      - device_name: "{{ itemy.device_name | default('/dev/sda1') }}"
        device_type: "{{ itemy.device_type | default('standard') }}"
        volume_size: "{{ itemy.volume_size | default(20) }}"
        delete_on_termination: "{{ itemy.delete_on_termination | default(true) }}"
    monitoring: "{{ itemy.monitoring | default('no') }}"
    vpc_subnet_id: "{{ itemy.vpc_subnet_id }}"
    assign_public_ip: "{{ itemy.assign_public_ip | default('yes') }}"
    instance_tags:
      Name: "{{ itemy.db_tags | default('galeracluster') }}"
      set: ansible
      group: "{{ itemy.db_tags | default('galeracluster') }}"
  with_items:
    - "{{ ec2 }}"
  when: create_ec2
  tags: ec2
  loop_control:
    loop_var: itemy
